<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crypto Converter</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <!-- Link to the custom CSS files -->
    <link rel="stylesheet" href="css/base-utilities.css">
    <link rel="stylesheet" href="css/layout-components.css">
    <link rel="stylesheet" href="css/form-elements-animations.css">
    <link rel="stylesheet" href="css/modes-themes.css">
    
    <!-- Custom Style for Live Price Feed Positioning -->
    <style>
        .live-price-feed {
            position: absolute;
            top: 25px; /* Adjust this value to move down the price feed */
            left: 28%; /* Centers the feed horizontally */
            transform: translateX(-50%); /* Centers the feed horizontally */
            z-index: 10; /* Ensure it's above other elements */
        }
    </style>
</head>
<body>

<!-- index.ejs -->

<!-- Dark Mode Toggle Switch -->
<div class="switch">
  <input type="checkbox" id="dark-mode-toggle" class="toggle-checkbox">
  <label for="dark-mode-toggle" class="slider round"></label>
</div>

<!-- Live Price Feed Display -->
<div class="live-price-feed">
  <span id="live-price">1 <span id="crypto-chosen"></span> = $<span id="fiat-value">00.00</span> <span id="fiat-chosen"></span></span>
</div>

<!-- Converter Container -->
<div class="converter-container">
    <!-- Title Bar -->
    <div class="draggable">
        <h1>Crypto Converter</h1>
    </div>
    
    <!-- Input and Select Elements -->
    <div class="flex-container">
        <div class="input-group">
            <input type="number" id="crypto-input" class="form-control" placeholder="Enter crypto">
            <select id="crypto-symbol-select" class="form-control mt-2">
                <% cryptoList.forEach(function(crypto) { %>
                    <option value="<%= crypto.symbol %>"><%= crypto.symbol %></option>
                <% }); %>
            </select>
        </div>
        <div class="input-group">
            <input type="number" id="fiat-input" class="form-control" placeholder="Enter fiat">
            <select id="fiat-symbol-select" class="form-control mt-2">
                <% fiatList.forEach(function(fiat) { %>
                    <option value="<%= fiat.symbol %>"><%= fiat.symbol %></option>
                <% }); %>
            </select>
        </div>
    </div>
    <div id="result-display" class="alert alert-info mt-3" style="display: none;"></div>
</div>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script src="/js/converter.js"></script>

<!-- Toggle Dark Mode Script -->
<script>
    function toggleDarkMode(isDark) {
        if (isDark) {
            document.body.classList.add('dark-mode');
            document.body.classList.remove('light-mode');
        } else {
            document.body.classList.add('light-mode');
            document.body.classList.remove('dark-mode');
        }
    }

    function saveDarkModePreference(isDark) {
        localStorage.setItem('darkMode', isDark ? 'enabled' : 'disabled');
    }

    const toggleSwitch = document.getElementById('dark-mode-toggle');
    const isDarkModeEnabled = localStorage.getItem('darkMode') === 'enabled';
    toggleSwitch.checked = isDarkModeEnabled;
    toggleDarkMode(isDarkModeEnabled);

    toggleSwitch.addEventListener('change', function() {
        const isDark = this.checked;
        toggleDarkMode(isDark);
        saveDarkModePreference(isDark);
    });
</script>

<!-- Live Price Update Script -->
<script>
    async function updateLivePriceDisplay() {
        const cryptoChosenElement = document.getElementById('crypto-chosen');
        const fiatValueElement = document.getElementById('fiat-value');
        const fiatChosenElement = document.getElementById('fiat-chosen');
        const cryptoSymbol = document.getElementById('crypto-symbol-select').value;
        const fiatSymbol = document.getElementById('fiat-symbol-select').value;

        try {
            const response = await fetch(`/live-price?crypto=${cryptoSymbol}&fiat=${fiatSymbol}`);
            const data = await response.json();

            if (response.ok && data.status === 'success') {
                cryptoChosenElement.textContent = cryptoSymbol.toUpperCase();
                fiatValueElement.textContent = parseFloat(data.convertedAmount).toFixed(2);
                fiatChosenElement.textContent = fiatSymbol.toUpperCase();
            } else {
                throw new Error('Failed to fetch live price');
            }
        } catch (error) {
            console.error('Error fetching live price:', error);
            // Handle the error by perhaps showing an error message on the UI
        }
    }

    // Call updateLivePriceDisplay when the content is loaded and when dropdown values change
    document.addEventListener('DOMContentLoaded', updateLivePriceDisplay);
    document.getElementById('crypto-symbol-select').addEventListener('change', updateLivePriceDisplay);
    document.getElementById('fiat-symbol-select').addEventListener('change', updateLivePriceDisplay);

    // Set an interval to update the live price every 30 seconds
    setInterval(updateLivePriceDisplay, 30000);
</script>

</body>
</html>